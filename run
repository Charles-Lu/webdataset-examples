#!/bin/bash


set -e
set -x


die() {
    echo "ERROR: $*"
    exit 1
}


cmd_clean() { # remove temporary files
    rm -f *-info.txt
    rm -f *.pth *.pth.tar
    rm -f 15*.log
}


cmd_venv() { # set up a virtualenv
    test -d venv || python3 -m venv venv
    source venv/bin/activate
    pip3 install -U pip
    pip3 install -U -r requirements.txt
    python3 -m bash_kernel.install
    pip3 install -U neovim
    pip3 install -U jupyterlab
    pip3 install -U pytest
}

cmd_lab() { # run jupyter lab in the environment
    set -e
    source venv/bin/activate
    export OMP_NUM_THREADS=1
    jupyter lab "$@"
}

cmd_bench() { # run the benchmark script with webdataset
    export OMP_NUM_THREADS=1
    set -e
    for i in {1..10}; do
        for loader in ${*:-wds orig}; do
            ./run main-wds.py --loader=$loader --augmentation=full --epochs=10
        done
    done
}


check_shards() {
    test -d ./data/val || die "no .data/val directory found"
    numshards=$(ls shards/imagenet-train-??????.tar | wc -l)
    if [[ $numshards != 490 ]]; then die "wrong # shards in ./shards (got: $numshards, wanted: 490)"; fi
}


cmd_single() { # run webdataset in single process
    check_shards
    source venv/bin/activate
    python3 main-wds.py
}

cmd_multi() {
    check_shards
    source venv/bin/activate
     GOPEN_VERBOSE=1 python3 main-wds.py --dist-url tcp://127.0.0.1:9153 --dist-backend nccl --multiprocessing-distributed --world-size 1 --rank 0
}


cmd_dist() {
    check_shards
    source venv/bin/activate
    set -x
    set -e
    session=distimgnet
    tmux new-session -s $session 'nvidia-smi dmon' \; detach-client
    export world=$1
    export MASTER_ADDR=127.0.0.1
    export MASTER_PORT=25600
    for ((rank=0; rank<world; rank++)); do
        cmd="env MASTER_ADDR=$MASTER_ADDR MASTER_PORT=$MASTER_PORT python3 main-wds.py --world-size $world --rank $rank; sleep 120"
        tmux split-window -t $session "$cmd"
    done
    tmux select-layout -t $session even-vertical
    tmux attach -t $session
}

cmd_makeshards() {
    test -d ./data/train || die "./data/train: does not exist"
    test -d ./data/val || die "./data/val: does not exist"
    test -d ./shards || die "./shards: must exist and be directory"
    source venv/bin/activate
    python3 makeshards.py "$@"
}

cmd=${1:-help}
shift
case $cmd in
help)
    echo; echo available commands:; echo
    grep '^cmd_[_0-9a-z]*() {' "$0" | sed 's/cmd_//;s/\(.*\)() *{* *#* */\1 -- /'
    ;;
*.py)
    # cmd_versions
    set -e
    # hg status grep -v '^M ' > /dev/null
    source venv/bin/activate
    export OMP_NUM_THREADS=1
    python3 "$cmd" "$@"
    ;;
*)
    set -e
    eval "cmd_$cmd" "$@"
    ;;
esac
